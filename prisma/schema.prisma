generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comanda {
  id                      Int                       @id @default(autoincrement())
  mesa                    Int?
  total                   Int?
  estado                  Int?
  idUsuario               Int
  fecha                   DateTime?                 @default(now()) @db.Timestamp(0)
  forma_pago              String?                   @db.VarChar(40)
  usuario                 usuario                   @relation(fields: [idUsuario], references: [id], onUpdate: Restrict, map: "FK_Comanda_idUsuario")
  comanda__envase_helado_ comanda__envase_helado_[]
  combo_comanda           combo_comanda[]
  producto_comanda        producto_comanda[]

  @@index([idUsuario], map: "FK_Comanda_idUsuario")
}

model comanda__envase_helado_ {
  id                            Int                       @id @default(autoincrement())
  idComanda                     Int
  idEnvaseHelado                Int
  cantidad                      Int
  comanda                       comanda                   @relation(fields: [idComanda], references: [id], onUpdate: Restrict, map: "idComanda-id")
  comanda__envase_helado_       comanda__envase_helado_   @relation("comanda__envase_helado_Tocomanda__envase_helado_", fields: [idEnvaseHelado], references: [id], onUpdate: Restrict, map: "idEnvaseHelado-id")
  other_comanda__envase_helado_ comanda__envase_helado_[] @relation("comanda__envase_helado_Tocomanda__envase_helado_")

  @@index([idComanda], map: "idComanda-id")
  @@index([idEnvaseHelado], map: "idEnvaseHelado-id")
  @@map("comanda-(envase-helado)")
}

model combo {
  id             Int              @id @default(autoincrement())
  nombre         String?          @db.VarChar(255)
  descripcion    String?          @db.Text
  precio         Int?
  activo         Boolean          @default(dbgenerated("(b'1')")) @db.Bit(1)
  combo_comanda  combo_comanda[]
  combo_envase   combo_envase[]
  combo_producto combo_producto[]
}

model combo_comanda {
  idCombo    Int
  numComanda Int
  cantidad   Int?
  comanda    comanda @relation(fields: [numComanda], references: [id], onUpdate: Restrict, map: "FK_ComandaCombo_Comanda")
  combo      combo   @relation(fields: [idCombo], references: [id], onUpdate: Restrict, map: "FK_ComandaCombo_Combo")

  @@id([idCombo, numComanda])
  @@index([numComanda], map: "FK_ComandaCombo_Comanda")
}

model combo_envase {
  idCombo  Int
  idEnvase Int
  cantidad Int?
  combo    combo  @relation(fields: [idCombo], references: [id], onUpdate: Restrict, map: "FK_ComboEnvase_Combo")
  envase   envase @relation(fields: [idEnvase], references: [id], onUpdate: Restrict, map: "FK_ComboEnvase_Envase")

  @@id([idCombo, idEnvase])
  @@index([idEnvase], map: "FK_ComboEnvase_Envase")
}

model combo_producto {
  idCombo    Int
  idProducto Int
  cantidad   Int?
  producto   producto @relation(fields: [idProducto], references: [id], onUpdate: Restrict, map: "FK_ComboProducto_Producto")
  combo      combo    @relation(fields: [idCombo], references: [id], onUpdate: Restrict, map: "FK_comboProducto_Combo")

  @@id([idCombo, idProducto])
  @@index([idProducto], map: "FK_ComboProducto_Producto")
}

model envase {
  id            Int             @id @default(autoincrement())
  nombre        String?         @db.VarChar(255)
  descripcion   String?         @db.Text
  capacidad     Int?
  precio        Int?
  activo        Boolean         @default(dbgenerated("(b'1')")) @db.Bit(1)
  combo_envase  combo_envase[]
  envase_helado envase_helado[]
}

model envase_helado {
  heladoId       Int
  envaseId       Int
  cantidadHelado Int
  id             Int    @id @default(autoincrement())
  envase         envase @relation(fields: [envaseId], references: [id], onUpdate: Restrict, map: "envaseid-id")
  helado         helado @relation(fields: [heladoId], references: [id], onUpdate: Restrict, map: "heladoid-id")

  @@index([envaseId], map: "envaseid-id")
  @@index([heladoId], map: "heladoid-id")
  @@map("envase-helado")
}

model helado {
  id            Int             @id @default(autoincrement())
  nombre        String?         @db.VarChar(255)
  descripcion   String?         @db.Text
  activo        Boolean         @default(dbgenerated("(b'1')")) @db.Bit(1)
  envase_helado envase_helado[]
}

model producto {
  id               Int                @id @default(autoincrement())
  nombre           String?            @db.VarChar(255)
  descripcion      String?            @db.Text
  precio           Int?
  activo           Boolean            @default(dbgenerated("(b'1')")) @db.Bit(1)
  combo_producto   combo_producto[]
  producto_comanda producto_comanda[]
}

model producto_comanda {
  idProducto Int
  numComanda Int
  cantidad   Int?
  comanda    comanda  @relation(fields: [numComanda], references: [id], onUpdate: Restrict, map: "FK_ComandaProducto_Comanda")
  producto   producto @relation(fields: [idProducto], references: [id], onUpdate: Restrict, map: "FK_ComandaProducto_Producto")

  @@id([idProducto, numComanda])
  @@index([numComanda], map: "FK_ComandaProducto_Comanda")
}

model usuario {
  id             Int       @id @default(autoincrement())
  nombre         String    @db.VarChar(255)
  contrasena     String    @db.VarChar(512)
  permComandas   Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  permSLComandas Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  permMenu       Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  permUsuarios   Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  permEsTableta  Boolean   @default(dbgenerated("(b'0')")) @db.Bit(1)
  comanda        comanda[]
}
